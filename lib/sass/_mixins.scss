@mixin location($t: auto, $r: auto, $b: auto, $l: auto) {
    top: $t;
    right: $r;
    bottom: $b;
    left: $l;
}

@mixin position($type, $z: auto, $t: auto, $r: auto, $b: auto, $l: auto) {
    position: $type;
    z-index: $z;
    @include location($t, $r, $b, $l);
}

@mixin ir($image, $rimage, $h: image-height($image), $w: image-width($image)) {
    display: inline-block;
    @include replace-text($image);
    @include size($h, $w);

    @include respond-to-retina(){
        @include replace-text($rimage);
        background-size: $w $h;
    }
}

@mixin size($h, $w) {
    height: $h;
    width: $w;
}

@mixin square($v) {
    @include size($v, $v);
}

// Responsive
@mixin respond-to-retina($density: 2){
    @media
    only screen and (-webkit-min-device-pixel-ratio: $density),
    only screen and (   min--moz-device-pixel-ratio: $density),		// Seems like a typo, also including more traditional word-ordering
    only screen and (   -moz-min-device-pixel-ratio: $density),
    only screen and (     -o-min-device-pixel-ratio: $density/1),
    only screen and (        min-device-pixel-ratio: $density),
    only screen and (                min-resolution: (96dpi * $density)),
    only screen and (                min-resolution: (1dppx * $density)) {
        @content;
    }
}

@mixin respond-to($min: undefined, $max: undefined) {
    @if $max == undefined {
        @if $min == undefined {
            @content;
        }

        @else {
            @media only screen and (min-width: $min) { @content; }
        }
    }
    @else if $min == undefined {
        @media only screen and (max-width: $max) { @content; }
    }
    @else {
        @media only screen and (min-width: $min) and (max-width: $max){ @content; }
    }
}

// Animations
@mixin keyframe($animation_name) {
    @-webkit-keyframes $animation_name {
        @content;
    }

    @-moz-keyframes $animation_name {
        @content;
    }

    @-ms-keyframes $animation_name {
        @content;
    }

    @-o-keyframes $animation_name {
        @content;
    }

    @keyframes $animation_name {
        @content;
    }
}

@mixin animation-name($name){
    -webkit-animation-name: $name;
    -moz-animation-name: $name;
    -ms-animation-name: $name;
    -o-animation-name: $name;
    animation-name: $name;
}

@mixin animation-duration($duration){
    -webkit-animation-duration: $duration;
    -moz-animation-duration: $duration;
    -ms-animation-duration: $duration;
    -o-animation-duration: $duration;
    animation-duration: $duration;
}

@mixin animation-timing-function($ease){
    -webkit-animation-timing-function: $ease;
    -moz-animation-timing-function: $ease;
    -ms-animation-timing-function: $ease;
    -o-animation-timing-function: $ease;
    animation-timing-function: $ease;
}

@mixin animation-delay($delay){
    -webkit-animation-delay: $delay;
    -moz-animation-delay: $delay;
    -ms-animation-delay: $delay;
    -o-animation-delay: $delay;
    animation-delay: $delay;
}

@mixin animation-iteration-count($count){
    -webkit-animation-iteration-count: $count;
    -moz-animation-iteration-count: $count;
    -ms-animation-iteration-count: $count;
    -o-animation-iteration-count: $count;
    animation-iteration-count: $count;
}

@mixin animation-direction($direction){
    -webkit-animation-direction: $direction;
    -moz-animation-direction: $direction;
    -ms-animation-direction: $direction;
    -o-animation-direction: $direction;
    animation-direction: $direction;
}

@mixin animation-fill-mode($fill-mode){
    -webkit-animation-fill-mode: $fill-mode;
    -moz-animation-fill-mode: $fill-mode;
    -ms-animation-fill-mode: $fill-mode;
    -o-animation-fill-mode: $fill-mode;
    animation-fill-mode: $fill-mode;
}

@mixin animation($name, $delay: 0s, $count: infinite, $ease: linear, $duration: .4s, $direction: normal, $fill-mode: forwards) {
    @include animation-name($name);
    @include animation-duration($duration);
    @include animation-timing-function($ease);
    @include animation-delay($delay);
    @include animation-iteration-count($count);
    @include animation-direction($direction);
    @include animation-fill-mode($fill-mode);
}

// Flexbox
@mixin flexbox() {
    display: -webkit-box;
    display: -moz-box;
    display: -ms-flexbox;
    display: -webkit-flex;
    display: flex;
}

@mixin flex($values) {
    -webkit-box-flex: $values;
    -moz-box-flex: $values;
    -webkit-flex: $values;
    -ms-flex: $values;
    flex: $values;
}

@mixin flex-flow($values) {
    -webkit-flex-flow: $values;
    -moz-flex-flow: $values;
    -ms-flex-flow: $values;
    flex: $values;
}

@mixin justify-content($val) {
    -webkit-justify-content: $val;
    -moz-justify-content: $val;
    -ms-justify-content: $val;
    justify-content: $val;
}

@mixin align-self($val){
    -webkit-align-self: $val;
    -moz-align-self: $val;
    -ms-align-self: $val;
    align-self: $val;
}

@mixin order($val) {
    -webkit-box-ordinal-group: $val;
    -moz-box-ordinal-group: $val;
    -ms-flex-order: $val;
    -webkit-order: $val;
    order: $val;
}